generate_network_data <- function(p,
n,
sigma2_beta = 1,
prop_zero = 0.8,
beta_mean = 0,
beta_sd = 1,
x_cor = 0.5,
x_sigma = 1){
adjm <- matrix(sample(0:1, p^2, replace = T, prob = c(prop_zero,1-prop_zero)),p,p)
adjm_noself <- adjm - diag(diag(adjm))
ntwrk <- igraph::graph_from_adjacency_matrix(adjm_noself,
mode= "undirected")
true_signals <- adjm[lower.tri(adjm_noself)]
i <- 2
j <- NULL # rows
k <- NULL # columns
while (i < p+1){
addonj <- i:p
addonk <- rep(i-1,p+1-i)
j <- c(j,addonj)
k <- c(k,addonk)
i <- i + 1
}
beta_with_indices = data.frame(signal = true_signals, j = j, k = k)
beta_with_indices$beta <- beta_with_indices$signal * rnorm(dim(beta_with_indices)[1],beta_mean, beta_sd)
q = p*(p-1)/2
cov_mat <- diag(q)*x_sigma
cov_mat[upper.tri(cov_mat)] <- x_cor
cov_mat[lower.tri(cov_mat)] <- x_cor
observed_networks <- list()
y <- NULL
for (i in 1:n){
x_i <- MASS::mvrnorm(n = 1, mu = rep(0,q), Sigma = cov_mat)
ob_ntwrk <- matrix(NA,p,p)
ob_ntwrk[upper.tri(ob_ntwrk)] <- x_i
ob_ntwrk[lower.tri(ob_ntwrk)] <- t(x_i)
diag(ob_ntwrk) <- 0
y_i <- t(beta_with_indices$beta)%*%ob_ntwrk[lower.tri(ob_ntwrk)] + rnorm(1,mean = 0, sd = sigma2_beta)
y <- c(y_i, y)
observed_networks[[i]] <- ob_ntwrk
}
rtrn <- list(outcomes = y, signal = beta_with_indices, ntwrks = observed_networks)
return(rtrn)
}
generate_network_data(8,100)
dat <- generate_network_data(8,100)
dat$outcomes
dat$signal$signal
dat <- generate_network_data(25,100)
dat$outcomes
dat$signal
dat <- generate_network_data(25,100, prop_zero = 0.9)
adjm
## Create a random Adjacency Matrix that represents the network
adjm <- matrix(sample(0:1, p^2, replace = T, prob = c(prop_zero,1-prop_zero)),p,p)
p = 9
p = 5
prop_zero = 0.8
## Create a random Adjacency Matrix that represents the network
adjm <- matrix(sample(0:1, p^2, replace = T, prob = c(prop_zero,1-prop_zero)),p,p)
adjm
## Create a random Adjacency Matrix that represents the network
adjm <- matrix(NA,p,p)
q = p*(p-1)/2
connections <- matrix(sample(0:1,q , replace = T, prob = c(prop_zero,1-prop_zero)))
connections
adjm
adjm[lower.tri(adjm)] <- connections
adjm
adjm[upper.tri(adjm)] <- t(connections)
adjm
diag(adjm) <- 0
generate_network_data <- function(p,
n,
sigma2_beta = 1,
prop_zero = 0.8,
beta_mean = 0,
beta_sd = 1,
x_cor = 0.5,
x_sigma = 1){
## Create a random Adjacency Matrix that represents the network
adjm <- matrix(NA,p,p)
q = p*(p-1)/2
connections <- matrix(sample(0:1,q , replace = T, prob = c(prop_zero,1-prop_zero)))
adjm[lower.tri(adjm)] <- connections
adjm[upper.tri(adjm)] <- t(connections)
diag(adjm) <- 0
ntwrk <- igraph::graph_from_adjacency_matrix(adjm,
mode= "undirected")
true_signals <- adjm[lower.tri(adjm)]
i <- 2
j <- NULL # rows
k <- NULL # columns
while (i < p+1){
addonj <- i:p
addonk <- rep(i-1,p+1-i)
j <- c(j,addonj)
k <- c(k,addonk)
i <- i + 1
}
beta_with_indices = data.frame(signal = true_signals, j = j, k = k)
beta_with_indices$beta <- beta_with_indices$signal * rnorm(dim(beta_with_indices)[1],beta_mean, beta_sd)
cov_mat <- diag(q)*x_sigma
cov_mat[upper.tri(cov_mat)] <- x_cor
cov_mat[lower.tri(cov_mat)] <- x_cor
observed_networks <- list()
y <- NULL
for (i in 1:n){
x_i <- MASS::mvrnorm(n = 1, mu = rep(0,q), Sigma = cov_mat)
ob_ntwrk <- matrix(NA,p,p)
ob_ntwrk[upper.tri(ob_ntwrk)] <- x_i
ob_ntwrk[lower.tri(ob_ntwrk)] <- t(x_i)
diag(ob_ntwrk) <- 0
y_i <- t(beta_with_indices$beta)%*%ob_ntwrk[lower.tri(ob_ntwrk)] + rnorm(1,mean = 0, sd = sigma2_beta)
y <- c(y_i, y)
observed_networks[[i]] <- ob_ntwrk
}
rtrn <- list(outcomes = y, signal = beta_with_indices, ntwrks = observed_networks)
return(rtrn)
}
dat <- generate_network_data(25,100, prop_zero = 0.9)
dat$\
dat$signal$bet
dat$signal$beta
dat$signal$signal
